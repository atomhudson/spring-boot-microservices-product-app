server.port=8084

spring.application.name=notification-services
spring.kafka.consumer.group-id=notification-service-group

eureka.client.service-url.defaultZone=http://eureka:password@localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# RabbitMQ Properties
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest

# Apache Kafka Properties
spring.cloud.stream.kafka.binder.brokers=localhost:9092

# spring-cloud-stream configure
# Receive or In_Binding
spring.cloud.function.definition=orderEventReceiver
spring.cloud.stream.bindings.orderEventReceiver-in-0.destination=order.created
spring.cloud.stream.bindings.orderEventReceiver-in-0.content-type=application/json
spring.cloud.stream.bindings.orderEventReceiver-in-0.group=${spring.application.name}

# Sending or Out_Binding For ACK
spring.cloud.stream.bindings.orderEventReceiver-out-0.destination=order.ack
spring.cloud.stream.bindings.orderEventReceiver-out-0.content-type=application/json
spring.cloud.stream.bindings.orderEventReceiver-out-0.group=${spring.application.name}